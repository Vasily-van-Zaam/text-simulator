{"version":3,"sources":["theme/custom_theme.ts","theme/styleApp.ts","components/textSimulator.tsx","components/foms/styleForm.ts","components/foms/StartForm.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["createMuiTheme","overrides","MuiInputBase","root","fontSize","MuiButton","text","color","containedPrimary","background","label","transition","borderRadius","textTransform","MuiButtonBase","MuiTypography","zIndex","MuiOutlinedInput","notchedOutline","border","borderWidth","borderColor","backgroundColor","typography","fontFamily","join","palette","primary","main","greay","secondary","blue","makeStyles","app","textAlign","appContent","minHeight","display","flexDirection","alignItems","justifyContent","inlineSize","textWrapper","textContent","margin","flex","textOptions","width","loading","restartButton","position","height","right","initLetter","errorLetter","padding","passedLetter","nextLetter","textApi","query","Letter","props","className","value","createList","initClassName","nextClassName","textList","split","list","i","length","push","TextSimulator","classes","styleApp","React","useState","errorLogin","messageError","user","currentText","letterList","passedList","restart","values","setValues","speed","precision","openSnack","setOpenSnack","messageSnack","setMessageSnack","onHintError","setOnHintError","handleOnHint","e","isTrusted","handleOpenSnack","useEffect","fetch","then","response","json","data","console","log","catch","error","carrentIndex","nextIndex","currentLetter","keyword","toLowerCase","toUpperCase","style","CircularProgress","Card","CardContent","Avatar","map","o","Typography","Divider","Switch","checked","onChange","name","Button","onClick","startIcon","CardActions","Snackbar","anchorOrigin","vertical","horizontal","open","autoHideDuration","message","action","Fragment","IconButton","size","aria-label","theme","formWrapper","overflow","formHeader","marginBottom","formHeaderLoaded","opacity","formContent","transitionDelay","logo","pointerEvents","textLogo","fontStyle","fontWeight","lineHeight","letterSpacing","blockBotton","marginTop","button","marginLeft","StartForm","styleForm","userName","setUserName","align","variant","FormControl","TextField","id","aria-describedby","helperText","placeholder","target","success","App","valueMenu","setMenu","isStart","isLoading","startState","setStartState","newTimeEnter","dataTextSimulator","setTextSimulator","hystory","lastResult","window","localStorage","document","addEventListener","key","Date","getTime","ThemeProvider","customTheme","Container","fixed","BottomNavigation","event","newValue","showLabels","BottomNavigationAction","icon","disabled","setItem","a","b","c","element","showPage","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.8b0d52ed.chunk.js","sourcesContent":["import { createMuiTheme} from '@material-ui/core/styles';\nimport greay from '@material-ui/core/colors/grey';\nimport blue from '@material-ui/core/colors/blue';\n\nexport default createMuiTheme({\n    overrides: {\n        MuiInputBase:{\n           root: {\n                fontSize: '1.3em'\n           }\n        },\n        MuiButton: {\n            text: {\n                color: '#949494',\n            },\n            containedPrimary: {\n                background: 'radial-gradient(5422.06% 300.76% at 0% 288.54%, #3C8291 0%, #00B5AD 100%)',\n                label: {\n                    color: '#fff',\n                    \"&$disabled\": {\n                        color: '#949494',\n                    },\n                }\n            },\n            label: {\n                fontSize: 13,\n            },\n            root: {\n                transition: 'all 0.3s linear 0s',\n                \"&$disabled\": {\n                    background: 'none'\n                },\n                borderRadius: 6,\n                textTransform: 'none'\n            }\n        },\n        MuiButtonBase: {\n\n\n        },\n        MuiTypography: {\n            root: {\n                zIndex: 1000,\n                '& h2 MuiTypography-root': {\n                    fontSize: 10\n                }\n            },\n\n        },\n        MuiOutlinedInput: {\n\n            notchedOutline: {\n                border: '0 solid',\n                borderRadius: 6\n            },\n            root: {\n                '&.Mui-focused .MuiOutlinedInput-notchedOutline': {\n                    borderWidth: 1,\n                    borderColor: '#8C8C8C',\n                },\n                backgroundColor: '#F2F2F2',\n                borderRadius: 6,\n\n                '&.Mui-focused': {\n                    borderWidth: 1,\n                    borderColor: '#8C8C8C',\n                    backgroundColor: 'white'\n                },\n            },\n        },\n\n    },\n    typography: {\n        fontFamily: [\n            '-apple-system',\n            'BlinkMacSystemFont',\n            '\"Segoe UI\"',\n            'Roboto',\n            '\"Helvetica Neue\"',\n            'Arial',\n            'sans-serif',\n            '\"Apple Color Emoji\"',\n            '\"Segoe UI Emoji\"',\n            '\"Segoe UI Symbol\"',\n        ].join(','),\n    },\n    palette: {\n        primary: {\n            main: greay[900],\n        },\n        secondary: {\n            main: blue[500],\n        },\n    },\n});","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles(() => ({\n    app: {\n        textAlign: 'center'\n    },\n    appContent: {\n        background: 'radial-gradient(37.2% 50% at 50% 50%, #ECECEC 0%, #C4C4C4 100%)',\n        minHeight: '90vh ',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n        fontSize: '1.5em',\n        inlineSize: 0.5,\n    },\n    textWrapper: {\n        display: 'flex',\n    },\n    textContent: {\n        margin: 20,\n        flex: 4\n    },\n    textOptions:{\n        width: 500,\n        margin: 20,\n        flex: 1\n    },\n    loading:{\n        display: 'block',\n        margin: '0 auto',\n    },\n    restartButton: {\n        position: 'absolute',\n        height: 48,\n        width: 164,\n        right: 100,\n        \n    },\n    initLetter: {\n        color: 'black'\n    },\n    errorLetter: {\n        color: 'white',\n        backgroundColor: 'red',\n        border: '1px solid red',\n        borderRadius: 10,\n        padding: 3\n    },\n    passedLetter: {\n        color: 'green',\n    \n    },\n    nextLetter: {\n        color: 'white',\n        backgroundColor: 'green',\n        border: '1px solid green',\n        borderRadius: 10,\n        padding: 3\n\n    }\n}));","import React from 'react';\nimport {\n  Card, CardContent, CardActions,\n  CircularProgress,\n  Snackbar,\n  Button,\n  Avatar,\n  IconButton,\n  Switch,\n  Typography,\n  Divider,\n\n} from '@material-ui/core';\nimport CloseIcon from '@material-ui/icons/Close';\nimport AvTimerIcon from '@material-ui/icons/AvTimer';\nimport GpsFixedIcon from '@material-ui/icons/GpsFixed';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport styleApp from '../theme/styleApp';\nimport { Label } from '@material-ui/icons';\n\n\nconst textApi = {\n  ru: {\n    query: 'https://fish-text.ru/get'\n  }\n}\ninterface TextSimulatorProps {\n  keyword: string,\n  newTimeEnter: number\n}\n\ninterface User {\n  email: string;\n  name?: string;\n  phone?: string;\n  avatar?: string;\n  currentToken?: string;\n  birthday?: string;\n}\n\ninterface LetterData {\n  value: string;\n  className: string;\n}\n\nfunction Letter(props: { value: string, className?: string }): JSX.Element {\n  return (\n    <span className={props.className}>{props.value}</span>\n  )\n}\n\nfunction createList(text: string,\n  initClassName: string = 'init-letter',\n  nextClassName: string = 'current-letter'): LetterData[] {\n  const textList = text.split('');\n  let list = [];\n  for (let i = 0; i < textList.length; i++) {\n    list.push({ value: textList[i], className: i === 0 ? nextClassName : initClassName });\n  }\n  return list;\n}\n\n\nfunction TextSimulator(props: TextSimulatorProps) {\n  const classes = styleApp();\n\n  const [values, setValues] = React.useState({\n    errorLogin: false,\n    messageError: '',\n    user: {} as User,\n    loading: true,\n    currentText: 'А м',\n    letterList: [] as LetterData[],\n    passedList: [] as string[],\n    restart: true\n  });\n\n  const [speed, setSpeed] = React.useState(0);\n  const [precision, setPrecision] = React.useState(0);\n  const [openSnack, setOpenSnack] = React.useState(false);\n  const [messageSnack, setMessageSnack] = React.useState((<p>Ok</p>));\n  const [onHintError, setOnHintError] = React.useState(true);\n\n  const handleOnHint = (e: any) => {\n    if (onHintError) return setOnHintError(!e.isTrusted);\n    return setOnHintError(e.isTrusted);\n  }\n\n  const handleOpenSnack = () => {\n    setOpenSnack(true);\n  };\n\n  const handleCloseSnack = () => {\n    setOpenSnack(false);\n  };\n\n  React.useEffect(() => {\n\n    if(!values.restart) return;\n    \n    fetch(textApi.ru.query)\n      .then((response) => {\n        setValues({\n          ...values, loading: false,\n          restart: false\n        });\n        response.json().then((data) => {\n          console.log('PLPLP');\n\n          setValues({\n            ...values, loading: false,\n            restart: false,\n            letterList: createList(data.text, classes.initLetter, classes.nextLetter,)\n          });\n        })\n      })\n      .catch((error) => {\n\n      })\n    setValues({ ...values, loading: true });\n\n\n\n  }, [values.restart])\n  console.log(values.restart);\n  React.useEffect(() => {\n\n    let carrentIndex = values.passedList.length - 0;\n    let nextIndex = carrentIndex + 1;\n    let letterList = values.letterList;\n    let passedList = values.passedList;\n    let currentLetter = letterList[carrentIndex];\n    let nextLetter = letterList[nextIndex];\n\n\n    if (currentLetter) {\n\n      if (props.keyword === currentLetter.value) {\n        console.log('===', props.keyword, currentLetter.value);\n\n        if (nextLetter) {\n          nextLetter.className = classes.nextLetter;\n          letterList[nextIndex] = nextLetter;\n        }\n        currentLetter.className = classes.passedLetter;\n        letterList[carrentIndex] = currentLetter;\n        passedList.push(props.keyword);\n        setOpenSnack(false);\n\n      } else if (currentLetter.className !== classes.passedLetter) {\n        console.log('!==', props.keyword, currentLetter.value);\n\n        currentLetter.className = classes.errorLetter;\n        letterList[carrentIndex] = currentLetter;\n        if (currentLetter.value?.toLowerCase() === props.keyword && currentLetter.value !== props.keyword) {\n          handleOpenSnack()\n          setMessageSnack(<p>Преключитесь на заглавный шрифт</p>)\n        } else if (currentLetter.value?.toUpperCase() === props.keyword && currentLetter.value !== props.keyword) {\n          handleOpenSnack()\n          setMessageSnack(<p style={{ textAlign: 'center' }}>Переключитесь на строчный шрифт</p>)\n        } else {\n          handleOpenSnack()\n          setMessageSnack(\n            <div style={{ textAlign: 'center' }}>\n              <p >Нажмите на клавишу - \"{currentLetter.value === \" \" ? 'Пообел' : currentLetter.value}\"</p>\n              <p>Вы нажали на - \"{props.keyword === \" \" ? 'Пообел' : props.keyword}\"</p>\n            </div>\n          )\n        }\n      }\n      setValues({ ...values, letterList: letterList });\n    }\n  }, [props])\n\n  return (\n    <div>\n      { values.loading ? <CircularProgress color='secondary' className={classes.loading} /> :\n        <Card style={{ width: '100%' }} >\n          <CardContent>\n            <Avatar></Avatar>\n            <div className={classes.textWrapper}>\n              <div className={classes.textContent} >\n                {values.letterList.map((o, i) => <Letter key={i} value={o.value} className={o.className} />)}\n              </div>\n\n              <div className={classes.textOptions}>\n                <Typography>СКОРОСТЬ</Typography>\n                <div>\n                  <AvTimerIcon style={{ fontSize: 40 }} />\n                  {speed} зн./мин\n                </div>\n\n\n                <Typography>ТОЧНОСТЬ</Typography>\n                <div><GpsFixedIcon style={{ fontSize: 40 }} />\n                  {precision} %\n                </div>\n                <Divider style={{ margin: '20px 0' }} />\n\n                <div>\n                  <Typography color=\"textSecondary\">Показ ошибок</Typography>\n                  <Switch checked={onHintError} onChange={handleOnHint} name=\"antoine\" />\n                </div>\n                <div className={classes.restartButton}>\n\n                  <Button\n                    onClick={() => setValues({ ...values, restart: true })}\n                    color=\"primary\"\n                    startIcon={<RefreshIcon />}\n                  > Начать заново</Button>\n                </div>\n              </div>\n            </div>\n          </CardContent>\n          <CardActions>\n\n          </CardActions>\n        </Card>\n      }\n\n\n      <Snackbar\n        anchorOrigin={{\n          vertical: 'top',\n          horizontal: 'center',\n        }}\n        style={{ backgroundColor: 'white' }}\n        open={openSnack && onHintError}\n        autoHideDuration={1000}\n        message={messageSnack}\n        action={\n          <React.Fragment>\n\n            <Switch checked={onHintError} onChange={handleOnHint} name=\"antoine\" />\n\n            <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={handleCloseSnack}>\n              <CloseIcon fontSize=\"small\" />\n            </IconButton>\n\n          </React.Fragment>\n        }\n      />\n    </div>\n\n  )\n}\n\nexport default TextSimulator;","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles((theme) => ({\n    formWrapper: {\n        // position: 'relative',\n        zIndex: 1,\n        transition: 'all 0.3s linear 0s',\n        overflow: 'hidden',\n        // maxHeight: 600,\n        width: 330,\n        // height: 0,\n        borderRadius: 6,\n        background: 'rgba(255, 255, 255, 1)',\n        margin: '0 auto',\n        padding: 35\n\n    },\n    formHeader: {\n        // padding: '50px 40px 40px 40px',\n        background: 'radial-gradient(138.81% 16453.56% at -23.78% 12.1%, #3C8291 9.59%, #00B5AD 100%)',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n        color: 'white',\n        position: 'relative',\n        overflow: 'hidden',\n        zIndex: 1000,\n        borderRadius: 6,\n        marginBottom: 30,\n        transition: 'all 1s linear 0s',\n    },\n    formHeaderLoaded: {\n        transition: 'all 1s linear 0s',\n        opacity: 0\n    },\n    formContent: {\n        transitionDelay: '0s',\n        transition: 'all 0.3s linear 0s',\n        zIndex: 1,\n        padding: '20px 40px'\n    },\n\n    logo: {\n        zIndex: 1000,\n        pointerEvents: 'none',\n        width: 180,\n        borderRadius: 0,\n        marginBottom: 15,\n    },\n    textLogo: {\n        \n        zIndex: 100,\n        fontSize: 16,\n        fontStyle: 'normal',\n        fontWeight: 400,\n        lineHeight: 19,\n        letterSpacing: '0em',\n        textAlign: 'center'\n    },\n\n    blockBotton: {\n        marginTop: 20,\n        marginBottom: 0\n    },\n    button: {\n        height: 48,\n        width: 164,\n        marginLeft: 5,\n    }\n    \n}));","import React from 'react';\nimport {\n    Button,\n    Typography, InputAdornment,\n    Divider, CircularProgress,\n    TextField,\n    FormControl,\n    InputLabel,\n    FormHelperText,\n    Input\n} from '@material-ui/core';\nimport styleForm from './styleForm';\n\ninterface StartFormProps {\n    success: (userName: string) => void,\n}\n\nfunction StartForm(props: StartFormProps) {\n    const classes = styleForm();\n\n    const [userName, setUserName] = React.useState('');\n\n    const handleForm = () => {\n        console.log(props.success(userName));\n    }\n\n    React.useEffect(() => {\n        \n    }, [props]);\n\n    return (\n        <div className={classes.formWrapper}>\n\n            <Typography className={classes.formHeader} align=\"center\" variant=\"h3\"> Добро пожаловать!</Typography>\n            <FormControl>\n                <TextField\n                    id=\"my-input\" \n                    aria-describedby=\"my-helper-text\" \n                    label=\"Ваше имя\"\n                    variant=\"outlined\"\n                    helperText=\"Введите любое имя\"\n                    placeholder=\"Имя\"\n                    value={userName}\n                    onChange={(e) => setUserName(e.target.value)}\n                    />\n                <div className={classes.blockBotton}>\n                    <Button variant=\"contained\" \n                    color=\"primary\"\n                    onClick={handleForm}\n                    >Сохронить</Button>\n                </div>    \n                \n            </FormControl>\n        </div>\n    )\n}\n\nexport default StartForm;","import React from 'react';\nimport {\n  Container,\n  BottomNavigation,\n  BottomNavigationAction,\n  CircularProgress\n} from '@material-ui/core';\nimport AppsIcon from '@material-ui/icons/Apps';\nimport ThumbUpIcon from '@material-ui/icons/ThumbUp';\nimport HomeIcon from '@material-ui/icons/Home';\nimport { ThemeProvider } from '@material-ui/core/styles'\nimport customTheme from './theme/custom_theme';\nimport styleApp from './theme/styleApp';\nimport TextSimulator from './components/textSimulator';\nimport StartForm from './components/foms/StartForm';\n\n\ninterface LocalStorageData {\n  userName?: '',\n  lastResult?: '',\n  hystoryResult?: ''\n}\n\nfunction App() {\n\n  const classes = styleApp();\n\n  const [valueMenu, setMenu] = React.useState(0);\n\n  const [startState, setStartState] = React.useState({\n    isStart: true,\n    isLoading: true,\n  });\n\n  const [dataTextSimulator, setTextSimulator] = React.useState({\n    keyword: '',\n    newTimeEnter: 0\n  });\n\n  const [dataPrifile, setPrifile] = React.useState({\n    userName: '',\n    hystory: '',\n    lastResult: ''\n  });\n\n  const handleStartForm = (userName: string) => {\n    window.localStorage.setItem('userName', userName)\n    setStartState({\n      isStart: false,\n      isLoading: false\n    })\n  }\n\n  React.useEffect(() => {\n    if (window.localStorage.userName) {\n      setStartState({\n        isStart: false,\n        isLoading: false\n      });\n    } else {\n      setStartState({\n        isStart: true,\n        isLoading: false\n      });\n    }\n    document.addEventListener(\"keypress\", (e) => {\n      console.log('enter: ', e.key);\n\n      setTextSimulator({\n        keyword: e.key,\n        newTimeEnter: new Date().getTime()\n      });\n    });\n  }, []);\n\n\n  const showPage = (a: JSX.Element, b: JSX.Element, c: JSX.Element) =>{\n    let element = a;\n    switch(valueMenu) {\n      case 0: element =a; break;\n      case 1: element = b; break;\n      case 2: element = c; break;\n    }\n    return element;\n  }\n  \n  return (\n    <ThemeProvider theme={customTheme}>\n      <Container fixed>\n        <BottomNavigation\n          value={valueMenu}\n          onChange={(event, newValue) => {\n            console.log(newValue);\n            setMenu(newValue);\n          }}\n          showLabels\n\n        >\n          <BottomNavigationAction label=\"Тестирование\"  icon={<AppsIcon />} />\n          <BottomNavigationAction label=\"Достижения\" disabled={startState.isStart} icon={<ThumbUpIcon />} />\n          <BottomNavigationAction label=\"О нас\" icon={<HomeIcon />} />\n        </BottomNavigation>\n\n      </Container>\n\n      <div className={classes.appContent}>\n        <Container>\n          {startState.isLoading ?\n            <CircularProgress color=\"secondary\" className={classes.loading} /> :\n            startState.isStart && valueMenu !== 2 ?\n              <StartForm success={handleStartForm}/> :\n              showPage(\n                <TextSimulator keyword={dataTextSimulator.keyword} newTimeEnter={dataTextSimulator.newTimeEnter} />,\n                <p>1</p>,\n                <p>2</p>\n              )      \n          }\n        </Container>\n      </div>\n\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}