[{"/Users/vasiliy-van-zaam/Desktop/PROJECTS/REACT/TESTS/text-simulator/src/index.tsx":"1","/Users/vasiliy-van-zaam/Desktop/PROJECTS/REACT/TESTS/text-simulator/src/reportWebVitals.ts":"2","/Users/vasiliy-van-zaam/Desktop/PROJECTS/REACT/TESTS/text-simulator/src/App.tsx":"3","/Users/vasiliy-van-zaam/Desktop/PROJECTS/REACT/TESTS/text-simulator/src/theme/styleApp.ts":"4","/Users/vasiliy-van-zaam/Desktop/PROJECTS/REACT/TESTS/text-simulator/src/theme/custom_theme.ts":"5","/Users/vasiliy-van-zaam/Desktop/PROJECTS/REACT/TESTS/text-simulator/src/components/textSimulator.tsx":"6","/Users/vasiliy-van-zaam/Desktop/PROJECTS/REACT/TESTS/text-simulator/src/components/foms/StartForm.tsx":"7","/Users/vasiliy-van-zaam/Desktop/PROJECTS/REACT/TESTS/text-simulator/src/theme/styleForm.ts":"8","/Users/vasiliy-van-zaam/Desktop/PROJECTS/REACT/TESTS/text-simulator/src/components/about.tsx":"9","/Users/vasiliy-van-zaam/Desktop/PROJECTS/REACT/TESTS/text-simulator/src/components/progressProfile.tsx":"10"},{"size":242,"mtime":1613690046933,"results":"11","hashOfConfig":"12"},{"size":425,"mtime":1612298897328,"results":"13","hashOfConfig":"12"},{"size":3008,"mtime":1613700412177,"results":"14","hashOfConfig":"12"},{"size":2640,"mtime":1613701021327,"results":"15","hashOfConfig":"12"},{"size":2411,"mtime":1613606708626,"results":"16","hashOfConfig":"12"},{"size":11923,"mtime":1613701832896,"results":"17","hashOfConfig":"12"},{"size":1515,"mtime":1613690150621,"results":"18","hashOfConfig":"12"},{"size":1085,"mtime":1613700990013,"results":"19","hashOfConfig":"12"},{"size":542,"mtime":1613700456181,"results":"20","hashOfConfig":"12"},{"size":3989,"mtime":1613702067942,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"jtc56m",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/vasiliy-van-zaam/Desktop/PROJECTS/REACT/TESTS/text-simulator/src/index.tsx",[],["44","45"],"/Users/vasiliy-van-zaam/Desktop/PROJECTS/REACT/TESTS/text-simulator/src/reportWebVitals.ts",[],"/Users/vasiliy-van-zaam/Desktop/PROJECTS/REACT/TESTS/text-simulator/src/App.tsx",[],"/Users/vasiliy-van-zaam/Desktop/PROJECTS/REACT/TESTS/text-simulator/src/theme/styleApp.ts",[],"/Users/vasiliy-van-zaam/Desktop/PROJECTS/REACT/TESTS/text-simulator/src/theme/custom_theme.ts",[],"/Users/vasiliy-van-zaam/Desktop/PROJECTS/REACT/TESTS/text-simulator/src/components/textSimulator.tsx",["46","47"],"import React from 'react';\nimport {\n  Card, CardContent, CardActions,\n  CircularProgress,\n  Snackbar,\n  Button,\n  Avatar,\n  IconButton,\n  Switch,\n  Typography,\n  Divider,\n  Modal\n} from '@material-ui/core';\nimport CloseIcon from '@material-ui/icons/Close';\nimport AvTimerIcon from '@material-ui/icons/AvTimer';\nimport GpsFixedIcon from '@material-ui/icons/GpsFixed';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport styleApp from '../theme/styleApp';\n\nconst textApi = {\n  ru: {\n    query: 'https://fish-text.ru/get'\n  }\n}\ninterface TextSimulatorProps {\n  keyword: string,\n  newTimeEnter: number,\n  timer?: number\n}\n\ninterface LetterData {\n  value: string;\n  className: string;\n}\n\nfunction Letter(props: { value: string, className?: string }): JSX.Element {\n  return (\n    <span className={props.className}>{props.value}</span>\n  )\n}\n\nfunction createList(text: string,\n  initClassName: string = 'init-letter',\n  nextClassName: string = 'current-letter'): LetterData[] {\n  const textList = text.split('');\n  let list = [];\n  for (let i = 0; i < textList.length; i++) {\n    list.push({ value: textList[i], className: i === 0 ? nextClassName : initClassName });\n  }\n  return list;\n}\n\n/////////////////////////// TextSimulator /////////////////////////\n/////////////////////////// TextSimulator /////////////////////////\n/////////////////////////// TextSimulator /////////////////////////\n/////////////////////////// TextSimulator /////////////////////////\n/////////////////////////// TextSimulator /////////////////////////\nfunction TextSimulator(props: TextSimulatorProps) {\n  const classes = styleApp();\n\n  const [values, setValues] = React.useState({\n    userName: '',\n    loading: true,\n    letterList: [] as LetterData[],\n    passedList: [] as string[],\n    timeList: [] as number[],\n    timer: 0 as any,\n    countError: 0,\n    banCountError: false,\n    restart: true,\n    finished: false\n  });\n\n  const [speed, setSpeed] = React.useState(0);\n  const [precision, setPrecision] = React.useState(100);\n  const [openSnack, setOpenSnack] = React.useState(false);\n  const [messageSnack, setMessageSnack] = React.useState((<p></p>));\n  const [onHintError, setOnHintError] = React.useState(true);\n  const [openModal, setOpenModal] = React.useState(false);\n\n  const handleCloseModal = () => {\n    setOpenModal(false);\n    setValues({...values, finished: false});\n  }\n  const setError = (e: JSX.Element) => {\n    setMessageSnack(e);\n    setOpenSnack(true);\n  }\n  const handleOnHint = (e: any) => {\n    if (onHintError) return setOnHintError(!e.isTrusted);\n    return setOnHintError(e.isTrusted);\n  }\n\n  const handleCloseSnack = () => {\n    setOpenSnack(false);\n  };\n\n  const handlePrecision = () => {\n    const resultError = parseFloat((100 - 100 * values.countError / values.letterList.length).toFixed(1));\n    setPrecision(resultError);\n  }\n\n\n  /////////////// START LOAD, Listening values.restart /////////////\n  /////////////// START LOAD, Listening values.restart /////////////\n  /////////////// START LOAD, Listening values.restart /////////////\n  React.useEffect(() => {\n    const userName = window.localStorage.userName;\n\n    if (!values.restart) return;\n\n    fetch(textApi.ru.query)\n      .then((response) => {\n        setSpeed(0);\n        setPrecision(100);\n        setValues({\n          ...values, loading: false,\n          restart: false,\n          timer: 0,\n          userName\n        });\n        response.json().then((data) => {\n          setValues({\n            ...values, loading: false,\n            restart: false,\n            letterList: createList(data.text, classes.initLetter, classes.nextLetter),\n            userName\n          });\n        })\n      })\n      .catch((error) => {\n        console.log(error);\n      })\n\n    setValues({ ...values, loading: true, timeList: [], passedList: [] });\n\n  }, [values.restart]);\n  /////////////// END START LOAD, Listening values.restart /////////////\n  /////////////// END START LOAD, Listening values.restart /////////////\n  /////////////// END START LOAD, Listening values.restart /////////////\n\n  /////////// Listening props.keyword ////////////\n  /////////// Listening props.keyword ////////////\n  /////////// Listening props.keyword ////////////\n  React.useEffect(() => {\n    \n    if (values.finished) return;\n    let carrentIndex = values.passedList.length - 0;\n    let nextIndex = carrentIndex + 1;\n    let letterList = values.letterList;\n    let passedList = values.passedList;\n    let currentLetter = letterList[carrentIndex];\n    let nextLetter = letterList[nextIndex];\n    let countError = values.countError;\n    let banCountError = values.banCountError;\n    let timeList = values.timeList;\n\n\n    const countInOneSecond = values.timeList.filter((item, i, arr) => {\n      return item >= new Date().getTime() - 1000;\n    }).length * 60;\n    const countIn10Second = values.timeList.filter((item, i, arr) => {\n      return item >= new Date().getTime() - 10000;\n    }).length * 6;\n    const countInMinute = values.timeList.filter((item, i, arr) => {\n      return item >= new Date().getTime() - 60000;\n    }).length;\n\n    \n    if (new Date().getTime() - values.timeList[0] >= 60000) {\n      setSpeed(countInMinute);\n    } else if (new Date().getTime() - values.timeList[0] < 10000) {\n      setSpeed(countInOneSecond);\n    } else {\n      setSpeed(countIn10Second);\n    }\n\n    if (currentLetter) {\n\n      if (props.keyword === currentLetter.value) {\n\n        timeList.push(props.newTimeEnter);\n\n        banCountError = false;\n        console.log('===', props.keyword, currentLetter.value);\n\n        if (nextLetter) {\n          nextLetter.className = classes.nextLetter;\n          letterList[nextIndex] = nextLetter;\n        }\n        currentLetter.className = classes.passedLetter;\n        letterList[carrentIndex] = currentLetter;\n        passedList.push(props.keyword);\n\n        handleCloseSnack();\n\n      } else if (currentLetter.className !== classes.passedLetter) {\n        currentLetter.className = classes.errorLetter;\n\n        if (!banCountError) {\n          countError += 1;\n          banCountError = true;\n        }\n\n        letterList[carrentIndex] = currentLetter;\n        if (currentLetter.value?.toLowerCase() === props.keyword && currentLetter.value !== props.keyword) {\n\n          setError(<p>Преключитесь на заглавный шрифт</p>)\n        } else if (currentLetter.value?.toUpperCase() === props.keyword && currentLetter.value !== props.keyword) {\n\n          setError(<p style={{ textAlign: 'center' }}>Переключитесь на строчный шрифт</p>)\n        } else {\n\n          setError(\n            <div style={{ textAlign: 'center' }}>\n              <p>Нажмите на клавишу - \"{currentLetter.value === \" \" ? 'Пообел' : currentLetter.value}\"</p>\n              <p>Вы нажали на - \"{props.keyword === \" \" ? 'Пообел' : props.keyword}\"</p>\n            </div>\n          )\n        }\n      }\n\n      let finished = letterList.length === passedList.length;\n      if (finished) {\n        setOpenModal(true);\n        /////////// WRITE HYSTORY IN LOCALSTORAGE ////////////\n        /////////// WRITE HYSTORY IN LOCALSTORAGE ////////////\n        /////////// WRITE HYSTORY IN LOCALSTORAGE ////////////\n        const hystory = JSON.parse(window.localStorage.hystory ?? '[]');\n        hystory.push({ \"speed\": speed, \"precision\": precision, \"date\": new Date()});\n        window.localStorage.setItem('hystory', JSON.stringify(hystory));\n        /////////// END WRITE HYSTORY IN LOCALSTORAGE ////////////\n        /////////// END WRITE HYSTORY IN LOCALSTORAGE ////////////\n        /////////// END WRITE HYSTORY IN LOCALSTORAGE ////////////\n      }\n      setValues({ ...values, letterList: letterList, countError, banCountError, timeList, finished });\n      handlePrecision();\n    }\n  }, [props]);\n\n  /////////// END Listening props.keyword ////////////\n  /////////// END Listening props.keyword ////////////\n  /////////// END Listening props.keyword ////////////\n\n\n  React.useEffect(() => {\n\n  }, [values.finished]);\n  \n  return (\n    <div>\n      { values.loading ? <CircularProgress color='secondary' className={classes.loading} /> :\n        <Card>\n          <CardContent>\n            <div className={classes.wrapperAvatar}>\n              <Avatar className={classes.avatar}>{values.userName[0]}</Avatar>\n              <Typography variant=\"h5\">{values.userName}</Typography>\n            </div>\n            <div className={classes.textWrapper}>\n              <div className={classes.textContent} >\n                {values.letterList.map((o, i) => <Letter key={i} value={o.value} className={o.className} />)}\n              </div>\n\n              <div className={classes.textOptions}>\n                <Typography>СКОРОСТЬ</Typography>\n                <div>\n                  <AvTimerIcon style={{ fontSize: 40, opacity: 0.5 }} />\n                  <span style={{ color: 'green' }}> {speed} зн./мин</span>\n                </div>\n\n\n                <Typography>ТОЧНОСТЬ</Typography>\n                <div><GpsFixedIcon style={{ fontSize: 40, opacity: 0.5 }} />\n                  <span style={{ color: 'green' }}> {precision} %</span>\n                </div>\n                <Divider style={{ margin: '20px 0' }} />\n\n                <div>\n                  <Typography color=\"textSecondary\">Показ ошибок</Typography>\n                  <Switch checked={onHintError} onChange={handleOnHint} name=\"antoine\" />\n                </div>\n                <div className={classes.restartButton}>\n\n                  <Button\n                    onClick={() => setValues({ ...values, restart: true, loading: true, timeList: [], passedList: [] })}\n                    color=\"primary\"\n                    startIcon={<RefreshIcon />}\n                  > Начать заново</Button>\n                </div>\n              </div>\n            </div>\n          </CardContent>\n          <CardActions>\n          </CardActions>\n        </Card>\n      }\n\n      <Snackbar\n        anchorOrigin={{\n          vertical: 'top',\n          horizontal: 'center',\n        }}\n        style={{ backgroundColor: 'white' }}\n        open={openSnack && onHintError}\n        autoHideDuration={1000}\n        message={messageSnack}\n        action={\n          <React.Fragment>\n            <Switch checked={onHintError} onChange={handleOnHint} name=\"antoine\" />\n            <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={handleCloseSnack}>\n              <CloseIcon fontSize=\"small\" />\n            </IconButton>\n          </React.Fragment>\n        }\n      />\n\n      <Modal\n        open={openModal}\n        onClose={handleCloseModal}\n        aria-labelledby=\"simple-modal-title\"\n        aria-describedby=\"simple-modal-description\"\n      >\n        <div className={classes.modal}>\n\n          <Typography variant=\"h4\" style={{textAlign: 'center'}}>\n            Поздравляем! {values.userName}\n          </Typography>\n          <Typography variant=\"h5\">\n            Ваш результат\n          </Typography>\n          <Typography variant=\"h5\">\n            <span style={{ color: 'green' }}> {speed} зн./мин</span>\n          </Typography>\n          <Typography variant=\"h5\">\n            <span style={{ color: 'green' }}> точность {precision} %</span>\n          </Typography>\n\n          <div className={classes.modalButton}>\n            <Button color=\"primary\" variant=\"contained\" onClick={handleCloseModal}>Ok</Button>\n          </div>\n        </div>\n\n      </Modal>\n    </div>  \n  )\n}\n/////////////////////////// TextSimulator /////////////////////////\n/////////////////////////// TextSimulator /////////////////////////\n/////////////////////////// TextSimulator /////////////////////////\n/////////////////////////// TextSimulator /////////////////////////\n/////////////////////////// TextSimulator /////////////////////////\nexport default TextSimulator;","/Users/vasiliy-van-zaam/Desktop/PROJECTS/REACT/TESTS/text-simulator/src/components/foms/StartForm.tsx",[],"/Users/vasiliy-van-zaam/Desktop/PROJECTS/REACT/TESTS/text-simulator/src/theme/styleForm.ts",[],"/Users/vasiliy-van-zaam/Desktop/PROJECTS/REACT/TESTS/text-simulator/src/components/about.tsx",[],"/Users/vasiliy-van-zaam/Desktop/PROJECTS/REACT/TESTS/text-simulator/src/components/progressProfile.tsx",[],{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","severity":1,"message":"53","line":137,"column":6,"nodeType":"54","endLine":137,"endColumn":22,"suggestions":"55"},{"ruleId":"52","severity":1,"message":"56","line":239,"column":6,"nodeType":"54","endLine":239,"endColumn":13,"suggestions":"57"},"no-native-reassign",["58"],"no-negated-in-lhs",["59"],"react-hooks/exhaustive-deps","React Hook React.useEffect has missing dependencies: 'classes.initLetter', 'classes.nextLetter', and 'values'. Either include them or remove the dependency array. You can also do a functional update 'setValues(v => ...)' if you only need 'values' in the 'setValues' call.","ArrayExpression",["60"],"React Hook React.useEffect has missing dependencies: 'classes.errorLetter', 'classes.nextLetter', 'classes.passedLetter', 'handlePrecision', 'precision', 'speed', and 'values'. Either include them or remove the dependency array. You can also do a functional update 'setValues(v => ...)' if you only need 'values' in the 'setValues' call.",["61"],"no-global-assign","no-unsafe-negation",{"desc":"62","fix":"63"},{"desc":"64","fix":"65"},"Update the dependencies array to be: [classes.initLetter, classes.nextLetter, values, values.restart]",{"range":"66","text":"67"},"Update the dependencies array to be: [classes.errorLetter, classes.nextLetter, classes.passedLetter, handlePrecision, precision, props, speed, values]",{"range":"68","text":"69"},[3823,3839],"[classes.initLetter, classes.nextLetter, values, values.restart]",[7735,7742],"[classes.errorLetter, classes.nextLetter, classes.passedLetter, handlePrecision, precision, props, speed, values]"]