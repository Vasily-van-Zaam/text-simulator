[{"/Users/vasiliy-van-zaam/Desktop/PROJECTS/REACT/TESTS/text-simulator/src/index.tsx":"1","/Users/vasiliy-van-zaam/Desktop/PROJECTS/REACT/TESTS/text-simulator/src/reportWebVitals.ts":"2","/Users/vasiliy-van-zaam/Desktop/PROJECTS/REACT/TESTS/text-simulator/src/App.tsx":"3","/Users/vasiliy-van-zaam/Desktop/PROJECTS/REACT/TESTS/text-simulator/src/theme/styleApp.ts":"4","/Users/vasiliy-van-zaam/Desktop/PROJECTS/REACT/TESTS/text-simulator/src/theme/custom_theme.ts":"5","/Users/vasiliy-van-zaam/Desktop/PROJECTS/REACT/TESTS/text-simulator/src/components/textSimulator.tsx":"6","/Users/vasiliy-van-zaam/Desktop/PROJECTS/REACT/TESTS/text-simulator/src/components/foms/StartForm.tsx":"7"},{"size":243,"mtime":1613576929884,"results":"8","hashOfConfig":"9"},{"size":425,"mtime":1612298897328,"results":"10","hashOfConfig":"9"},{"size":1177,"mtime":1613596966415,"results":"11","hashOfConfig":"9"},{"size":1174,"mtime":1613579905659,"results":"12","hashOfConfig":"9"},{"size":2411,"mtime":1613522406601,"results":"13","hashOfConfig":"9"},{"size":6289,"mtime":1613596958143,"results":"14","hashOfConfig":"9"},{"size":221,"mtime":1613596030298,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"jtc56m",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"/Users/vasiliy-van-zaam/Desktop/PROJECTS/REACT/TESTS/text-simulator/src/index.tsx",[],["32","33"],"/Users/vasiliy-van-zaam/Desktop/PROJECTS/REACT/TESTS/text-simulator/src/reportWebVitals.ts",[],"/Users/vasiliy-van-zaam/Desktop/PROJECTS/REACT/TESTS/text-simulator/src/App.tsx",["34"],"/Users/vasiliy-van-zaam/Desktop/PROJECTS/REACT/TESTS/text-simulator/src/theme/styleApp.ts",[],"/Users/vasiliy-van-zaam/Desktop/PROJECTS/REACT/TESTS/text-simulator/src/theme/custom_theme.ts",[],"/Users/vasiliy-van-zaam/Desktop/PROJECTS/REACT/TESTS/text-simulator/src/components/textSimulator.tsx",["35","36","37","38","39","40"],"import React from 'react';\nimport {\n  Card, CardContent, CardActions,\n  CircularProgress,\n  Snackbar,\n  // Button,\n  Avatar,\n  IconButton,\n  Switch,\n  Typography\n} from '@material-ui/core';\nimport CloseIcon from '@material-ui/icons/Close';\nimport AvTimerIcon from '@material-ui/icons/AvTimer';\nimport GpsFixedIcon from '@material-ui/icons/GpsFixed';\nimport styleApp from '../theme/styleApp';\n\n\nconst textApi = {\n  ru: {\n    query: 'https://fish-text.ru/get'\n  }\n}\ninterface TextSimulatorProps {\n  keyword: string,\n  newTimeEnter: number\n}\n\ninterface User {\n  email: string;\n  name?: string;\n  phone?: string;\n  avatar?: string;\n  currentToken?: string;\n  birthday?: string;\n}\n\ninterface LetterData {\n  value: string;\n  className: string;\n}\n\nfunction Letter(props: { value: string, className?: string }): JSX.Element {\n  return (\n    <span className={props.className}>{props.value}</span>\n  )\n}\n\nfunction createList(text: string,\n  initClassName: string = 'init-letter',\n  nextClassName: string = 'current-letter'): LetterData[] {\n  const textList = text.split('');\n  let list = [];\n  for (let i = 0; i < textList.length; i++) {\n    list.push({ value: textList[i], className: i === 0 ? nextClassName : initClassName });\n  }\n  return list;\n}\n\n\nfunction TextSimulator(props: TextSimulatorProps) {\n  const classes = styleApp();\n\n  const [values, setValues] = React.useState({\n    errorLogin: false,\n    messageError: '',\n    user: {} as User,\n    loading: true,\n    currentText: 'А м',\n    letterList: [] as LetterData[],\n    passedList: [] as string[]\n  });\n\n  const [speed, setSpeed] = React.useState(0);\n  const [precision, setPrecision] = React.useState(0);\n  const [openSnack, setOpenSnack] = React.useState(false);\n  const [messageSnack, setMessageSnack] = React.useState((<p>Ok</p>));\n  const [onHintError, setOnHintError] = React.useState(true);\n\n  const handleOnHint = (e: any) => {\n    if (onHintError) return setOnHintError(!e.isTrusted);\n    return setOnHintError(e.isTrusted);\n  }\n\n  const handleOpenSnack = () => {\n    setOpenSnack(true);\n  };\n\n  const handleCloseSnack = () => {\n    setOpenSnack(false);\n  };\n  React.useEffect(() => {\n\n    fetch(textApi.ru.query)\n      .then((response) => {\n        response.json().then((data) => {\n          setValues({\n            ...values, loading: false,\n            letterList: createList(data.text, classes.initLetter, classes.nextLetter)\n          });\n        })\n      })\n      .catch((error) => {\n\n      })\n    setValues({ ...values, loading: true });\n\n  }, [])\n\n  React.useEffect(() => {\n\n    let carrentIndex = values.passedList.length - 0;\n    let nextIndex = carrentIndex + 1;\n    let letterList = values.letterList;\n    let passedList = values.passedList;\n    let currentLetter = letterList[carrentIndex];\n    let nextLetter = letterList[nextIndex];\n\n\n    if (currentLetter) {\n\n      if (props.keyword === currentLetter.value) {\n        console.log('===', props.keyword, currentLetter.value );\n        \n        if (nextLetter) {\n          nextLetter.className = classes.nextLetter;\n          letterList[nextIndex] = nextLetter;\n        }\n        currentLetter.className = classes.passedLetter;\n        letterList[carrentIndex] = currentLetter;\n        passedList.push(props.keyword);\n        setOpenSnack(false);\n\n      } else if (currentLetter.className !== classes.passedLetter) {\n        console.log('!==', props.keyword, currentLetter.value);\n\n        currentLetter.className = classes.errorLetter;\n        letterList[carrentIndex] = currentLetter;\n        if (currentLetter.value?.toLowerCase() === props.keyword && currentLetter.value !== props.keyword) {\n          handleOpenSnack()\n          setMessageSnack(<p>Преключитесь на заглавный шрифт</p>)\n        } else if (currentLetter.value?.toUpperCase() === props.keyword && currentLetter.value !== props.keyword) {\n          handleOpenSnack()\n          setMessageSnack(<p style={{ textAlign: 'center' }}>Переключитесь на строчный шрифт</p>)\n        } else {\n          handleOpenSnack()\n          setMessageSnack(\n            <div style={{ textAlign: 'center' }}>\n              <p >Нажмите на клавишу - \"{currentLetter.value === \" \" ? 'Пообел' : currentLetter.value}\"</p>\n              <p>Вы нажали на - \"{props.keyword === \" \" ? 'Пообел' : props.keyword}\"</p>\n            </div>\n          )\n        }\n      }\n      setValues({ ...values, letterList: letterList });\n    }\n  }, [props])\n\n  return (\n    <div>\n      { values.loading ? <CircularProgress color='secondary' className={classes.loading} /> :\n        <Card style={{ width: '100%' }} >\n          <CardContent>\n            <Avatar></Avatar>\n            <div className={classes.textWrapper}>\n              <div className={classes.textContent} >\n                {values.letterList.map((o, i) => <Letter key={i} value={o.value} className={o.className} />)}\n              </div>\n\n              <div className={classes.textOptions}>\n                <Typography>СКОРОСТЬ</Typography>\n                <div>\n                  <AvTimerIcon style={{ fontSize: 40 }} />\n                </div>\n                \n                \n                <Typography>ТОЧНОСТЬ</Typography>\n                <div><GpsFixedIcon style={{ fontSize: 40 }} /></div>\n                <Typography color=\"textSecondary\">Показ ошибок</Typography>\n                <Switch checked={onHintError} onChange={handleOnHint} name=\"antoine\" />\n              </div>\n            </div>\n          </CardContent>\n          <CardActions>\n\n          </CardActions>\n        </Card>\n      }\n\n\n      <Snackbar\n        anchorOrigin={{\n          vertical: 'top',\n          horizontal: 'center',\n        }}\n        style={{ backgroundColor: 'white' }}\n        open={openSnack && onHintError}\n        autoHideDuration={1000}\n        message={messageSnack}\n        action={\n          <React.Fragment>\n\n            <Switch checked={onHintError} onChange={handleOnHint} name=\"antoine\" />\n\n            <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={handleCloseSnack}>\n              <CloseIcon fontSize=\"small\" />\n            </IconButton>\n          </React.Fragment>\n        }\n      />\n    </div>\n\n  )\n}\n\nexport default TextSimulator;","/Users/vasiliy-van-zaam/Desktop/PROJECTS/REACT/TESTS/text-simulator/src/components/foms/StartForm.tsx",[],{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","severity":1,"message":"46","line":5,"column":8,"nodeType":"47","messageId":"48","endLine":5,"endColumn":17},{"ruleId":"45","severity":1,"message":"49","line":73,"column":10,"nodeType":"47","messageId":"48","endLine":73,"endColumn":15},{"ruleId":"45","severity":1,"message":"50","line":73,"column":17,"nodeType":"47","messageId":"48","endLine":73,"endColumn":25},{"ruleId":"45","severity":1,"message":"51","line":74,"column":10,"nodeType":"47","messageId":"48","endLine":74,"endColumn":19},{"ruleId":"45","severity":1,"message":"52","line":74,"column":21,"nodeType":"47","messageId":"48","endLine":74,"endColumn":33},{"ruleId":"53","severity":1,"message":"54","line":107,"column":6,"nodeType":"55","endLine":107,"endColumn":8,"suggestions":"56"},{"ruleId":"53","severity":1,"message":"57","line":156,"column":6,"nodeType":"55","endLine":156,"endColumn":13,"suggestions":"58"},"no-native-reassign",["59"],"no-negated-in-lhs",["60"],"@typescript-eslint/no-unused-vars","'CloseIcon' is defined but never used.","Identifier","unusedVar","'speed' is assigned a value but never used.","'setSpeed' is assigned a value but never used.","'precision' is assigned a value but never used.","'setPrecision' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has missing dependencies: 'classes.initLetter', 'classes.nextLetter', and 'values'. Either include them or remove the dependency array. You can also do a functional update 'setValues(v => ...)' if you only need 'values' in the 'setValues' call.","ArrayExpression",["61"],"React Hook React.useEffect has missing dependencies: 'classes.errorLetter', 'classes.nextLetter', 'classes.passedLetter', and 'values'. Either include them or remove the dependency array. You can also do a functional update 'setValues(v => ...)' if you only need 'values' in the 'setValues' call.",["62"],"no-global-assign","no-unsafe-negation",{"desc":"63","fix":"64"},{"desc":"65","fix":"66"},"Update the dependencies array to be: [classes.initLetter, classes.nextLetter, values]",{"range":"67","text":"68"},"Update the dependencies array to be: [classes.errorLetter, classes.nextLetter, classes.passedLetter, props, values]",{"range":"69","text":"70"},[2512,2514],"[classes.initLetter, classes.nextLetter, values]",[4392,4399],"[classes.errorLetter, classes.nextLetter, classes.passedLetter, props, values]"]